name: project deployment
on:
  push:
    branches: [main]

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Build jar with Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Gradle build
        run: |
          chmod +x ./gradlew
          ./gradlew clean bootJar

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/back:latest

  deploy:
    name: deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: SSH and deploy
        uses: appleboy/ssh-action@v1
        with:
          host: 121.140.125.176
          username: test
          password: qwer1234
          port: 119
          script: |
            # --- Docker Hub 로그인 ---
            echo "${DOCKERHUB_TOKEN}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin

            # --- Docker 이미지 pull ---
            docker pull ayoungg/back:latest || true

            # --- Nginx 현재 포트 확인 ---
            CUR_PORT=$(grep -oE '8080|8081' /etc/nginx/sites-enabled/default)
            if [ "$CUR_PORT" = "8080" ]; then
              OLD_PORT=8080
              NEW_PORT=8081
            else
              OLD_PORT=8081
              NEW_PORT=8080
            fi
            echo "OLD_PORT=$OLD_PORT"
            echo "NEW_PORT=$NEW_PORT"

            # --- 새 포트 컨테이너 제거 (기존 실행 중이면 삭제) ---
            docker rm -f back-$NEW_PORT 2>/dev/null || true

            # --- 새 컨테이너 실행 ---
            docker run -d --name back-$NEW_PORT -p $NEW_PORT:8080 ayoungg/back:latest

            # --- Health 체크 (최대 3분, 5초 간격) ---
            for i in $(seq 1 36); do
              RESP=$(curl -fsS --max-time 5 "http://127.0.0.1:${NEW_PORT}/health" || true)
              echo "Health response: $RESP"
              if echo "$RESP" | grep -qi 'ok'; then
                echo "New container is healthy."
                break
              fi
              sleep 5
            done

            # --- Nginx 포트 교체 & reload ---
            sed -i "s/$OLD_PORT/$NEW_PORT/g" /etc/nginx/sites-enabled/default
            nginx -s reload

            # --- 이전 컨테이너 제거 ---
            docker rm -f back-$OLD_PORT 2>/dev/null || true
