name: project deployment
on:
  push:
    branches: [main]
jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
      - name: Build jar with Gradle (uses build cache)
        uses: gradle/actions/setup-gradle@v4
      - name: Gradle build
        run: |
          chmod +x ./gradlew
          ./gradlew clean bootJar
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/back:latest

  deploy:
    name: deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: run ssh
        uses: appleboy/ssh-action@v1
        with:
          host: 121.140.125.176
          username: test
          password: qwer1234
          port: 119
          script: |
            docker pull ayoungg/back:latest || true
            CUR_PORT=`cat /etc/nginx/sites-enabled/default |  grep -oE '8080|8081'`
            if [ "$CUR_PORT" = "8080" ]; then
              OLD_PORT=8080
              NEW_PORT=8081
            else
              OLD_PORT=8081
              NEW_PORT=8080
            fi
            
            echo $OLD_PORT
            echo $NEW_PORT
            
            docker run -d --name back-$NEW_PORT -p $NEW_PORT:8080 --pull=always ayoungg/back:latest

            for i in $(seq 1 36); do
              if RESP="$(curl -fsS --max-time 3 "http://127.0.0.1:${NEW_PORT}/health" || true)"; then
                echo "Health response: ${RESP}"
                  if echo "$RESP" | grep -qi 'ok'; then
                    echo "New container is healthy (curl ok)."
                      break
                  fi
                fi
                sleep 5
            done

            sed -i "s/$OLD_PORT/$NEW_PORT/g" /etc/nginx/sites-enabled/default
            nginx -s reload

            docker rm -f back-$OLD_PORT 2>/dev/null || true

